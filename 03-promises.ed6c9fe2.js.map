{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGoB,MAAdC,EAASC,SAASC,cAAc,SAChCC,EAAUH,EAAOE,cAAc,kBAC/BE,EAASJ,EAAOE,cAAc,iBAC9BG,EAAWL,EAAOE,cAAc,mBA+BtC,SAASI,EAAcC,EAAUC,GAc/B,OAbgB,IAAIC,SAAQ,CAACC,EAAKC,KAChCC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAe,C,SAAET,E,MAAUC,GAE7BK,EACFH,EAAIM,GAEJL,EAAIK,EAAa,GAElBR,EAAM,G,CAxCSR,EAAfiB,iBAAiB,UAGwB,SAAjBC,GAC7BA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOlB,EAAQmB,OAC5BC,EAAYF,OAAOjB,EAAOkB,OAC1BE,EAAcH,OAAOhB,EAASiB,OAClCJ,EAAIO,OAAOC,QACX,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACrCrB,EAAcqB,EAAGP,GACdQ,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBxB,QAAiBC,MAAU,IAGnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA/B,GAASgC,OAAOG,QACd,sBAAoB1B,QAAiBC,MAAU,IAIrDY,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Імпорт для відображення повідомлень користувачеві\nimport Notiflix from 'notiflix';\n\n// Звернутися до розмітки HTML\nconst formEl = document.querySelector('.form');\nconst delayEl = formEl.querySelector('[name=\"delay\"]');\nconst stepEl = formEl.querySelector('[name=\"step\"]');\nconst amountEl = formEl.querySelector('[name=\"amount\"]');\n\n//Додати тип події \"submit\" на кнопку \"Create promises\"\nformEl.addEventListener('submit', onSubmitCreatePromise);\n\n// ФУНКЦІЯ. Створення всіх промісів по введених параметрах\nfunction onSubmitCreatePromise(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(delayEl.value);\n  let stepValue = Number(stepEl.value);\n  let amountValue = Number(amountEl.value);\n  evt.target.reset();\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayValue += stepValue;\n  }\n}\n\n// ФУНКЦІЯ. Створює Promise.\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.5;\n\n      const resultObject = { position, delay };\n\n      if (shouldResolve) {\n        res(resultObject);\n      } else {\n        rej(resultObject);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","shouldResolve","Math","random","resultObject","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","target","reset","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ed6c9fe2.js.map"}